{"version":3,"sources":["webpack:///./src/utils/gmaps.js","webpack:///./node_modules/core-js/modules/es.array.concat.js"],"names":["resolveInitPromise","rejectInitPromise","CALLBACK_NAME","initialized","window","google","initPromise","Promise","resolve","reject","init","token","script","document","createElement","async","defer","src","onerror","querySelector","appendChild","$","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","undefined","FORCED","target","proto","forced","arg","i","k","length","len","E","this","A","n","arguments","TypeError"],"mappings":"yLAGIA,EACAC,EAJEC,EAAgB,UAElBC,IAAgBC,OAAOC,OAKrBC,EAAc,IAAIC,SAAQ,SAACC,EAASC,GACxCT,EAAqBQ,EACrBP,EAAoBQ,KAGP,SAASC,EAAKC,GAI3B,GAAIR,EAAa,OAAOG,EAExBH,GAAc,EAIdC,OAAOF,GAAiB,kBAAMF,EAAmBI,OAAOC,SAKxD,IAAMO,EAASC,SAASC,cAAc,UAOtC,OANAF,EAAOG,OAAQ,EACfH,EAAOI,OAAQ,EACfJ,EAAOK,IAAP,sDAA4DN,EAA5D,qBAA8ET,GAC9EU,EAAOM,QAAUjB,EACjBY,SAASM,cAAc,QAAQC,YAAYR,GAEpCN,I,oCCjCT,IAAIe,EAAI,EAAQ,QACZC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAiB,EAAQ,QACzBC,EAAqB,EAAQ,QAC7BC,EAA+B,EAAQ,QACvCC,EAAkB,EAAQ,QAC1BC,EAAa,EAAQ,QAErBC,EAAuBF,EAAgB,sBACvCG,EAAmB,iBACnBC,EAAiC,iCAKjCC,EAA+BJ,GAAc,KAAOT,GAAM,WAC5D,IAAIc,EAAQ,GAEZ,OADAA,EAAMJ,IAAwB,EACvBI,EAAMC,SAAS,KAAOD,KAG3BE,EAAkBT,EAA6B,UAE/CU,EAAqB,SAAUC,GACjC,IAAKhB,EAASgB,GAAI,OAAO,EACzB,IAAIC,EAAaD,EAAER,GACnB,YAAsBU,IAAfD,IAA6BA,EAAalB,EAAQiB,IAGvDG,GAAUR,IAAiCG,EAK/CjB,EAAE,CAAEuB,OAAQ,QAASC,OAAO,EAAMC,OAAQH,GAAU,CAClDN,OAAQ,SAAgBU,GACtB,IAGIC,EAAGC,EAAGC,EAAQC,EAAKC,EAHnBZ,EAAIf,EAAS4B,MACbC,EAAI1B,EAAmBY,EAAG,GAC1Be,EAAI,EAER,IAAKP,GAAK,EAAGE,EAASM,UAAUN,OAAQF,EAAIE,EAAQF,IAElD,GADAI,GAAW,IAAPJ,EAAWR,EAAIgB,UAAUR,GACzBT,EAAmBa,GAAI,CAEzB,GADAD,EAAMzB,EAAS0B,EAAEF,QACbK,EAAIJ,EAAMlB,EAAkB,MAAMwB,UAAUvB,GAChD,IAAKe,EAAI,EAAGA,EAAIE,EAAKF,IAAKM,IAASN,KAAKG,GAAGzB,EAAe2B,EAAGC,EAAGH,EAAEH,QAC7D,CACL,GAAIM,GAAKtB,EAAkB,MAAMwB,UAAUvB,GAC3CP,EAAe2B,EAAGC,IAAKH,GAI3B,OADAE,EAAEJ,OAASK,EACJD","file":"../static/js/chunk-4e08a0ca.487215fc.js","sourcesContent":["const CALLBACK_NAME = 'initMap';\n\nlet initialized = !!window.google;\nlet resolveInitPromise;\nlet rejectInitPromise;\n// This promise handles the initialization\n// status of the google maps script.\nconst initPromise = new Promise((resolve, reject) => {\n  resolveInitPromise = resolve;\n  rejectInitPromise = reject;\n});\n\nexport default function init(token) {\n  // If Google Maps already is initialized\n  // the `initPromise` should get resolved\n  // eventually.\n  if (initialized) return initPromise;\n\n  initialized = true;\n  // The callback function is called by\n  // the Google Maps script if it is\n  // successfully loaded.\n  window[CALLBACK_NAME] = () => resolveInitPromise(window.google);\n\n  // We inject a new script tag into\n  // the `<head>` of our HTML to load\n  // the Google Maps script.\n  const script = document.createElement('script');\n  script.async = true;\n  script.defer = true;\n  script.src = `https://maps.googleapis.com/maps/api/js?key=${token}&callback=${CALLBACK_NAME}`;\n  script.onerror = rejectInitPromise;\n  document.querySelector('head').appendChild(script);\n\n  return initPromise;\n}","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n"],"sourceRoot":""}